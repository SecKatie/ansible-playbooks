---
- name: Create dashboard namespace
  kubernetes.core.k8s:
    name: "{{ k8s_dashboard_namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: Download Kubernetes Dashboard manifest
  ansible.builtin.get_url:
    url: "{{ k8s_dashboard_manifest_url }}"
    dest: "{{ k8s_dashboard_manifest_dest }}"
    mode: '0644'
  register: download_result
  until: download_result is succeeded
  retries: 3
  delay: 5

- name: Deploy Kubernetes Dashboard
  kubernetes.core.k8s:
    state: present
    src: "{{ k8s_dashboard_manifest_dest }}"
  register: deploy_result
  changed_when: deploy_result.changed

- name: Update dashboard service type
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'dashboard-service.yml.j2') | from_yaml }}"
  when: k8s_dashboard_service_type in ['NodePort', 'LoadBalancer']

- name: Create dashboard admin user
  kubernetes.core.k8s:
    state: present
    definition: "{{ item }}"
  loop: "{{ lookup('template', 'dashboard-admin.yml.j2') | from_yaml_all | list }}"

- name: Wait for admin token secret to be created
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: admin-user-token
    namespace: "{{ k8s_dashboard_namespace }}"
  register: admin_token
  until: admin_token.resources | length > 0
  retries: 12
  delay: 5

- name: Display dashboard access information
  ansible.builtin.debug:
    msg:
      - "Kubernetes Dashboard has been installed"
      - "Access URL: https://<node-ip>:{{ k8s_dashboard_node_port if k8s_dashboard_service_type == 'NodePort' else 'LoadBalancer-IP' }}"
      - "Admin token: {{ admin_token.resources[0].data.token | b64decode }}" 