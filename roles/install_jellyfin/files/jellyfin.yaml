---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/part-of: media
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: ansible
  annotations:
    app.kubernetes.io/description: "Jellyfin media server"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/instance: jellyfin
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/instance: jellyfin
        app.kubernetes.io/part-of: media
        app.kubernetes.io/component: server
        app.kubernetes.io/managed-by: ansible
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: jellyfin
        image: jellyfin/jellyfin:latest
        ports:
        - containerPort: 8096
          name: http
          protocol: TCP
        - containerPort: 8920
          name: https
          protocol: TCP
        - containerPort: 1900
          name: dlna
          protocol: UDP
        - containerPort: 7359
          name: discovery
          protocol: UDP
        env:
        - name: JELLYFIN_PublishedServerUrl
          value: "https://jellyfin.mulliken.net"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: "4"
            memory: 4Gi
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: config
          mountPath: /config
        - name: media
          mountPath: /media
        livenessProbe:
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
        startupProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 40   # 40 Ã— 3 s = 2 min by default
          periodSeconds: 3
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-config-pvc
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/part-of: media
    app.kubernetes.io/component: server
    app.kubernetes.io/managed-by: ansible
  annotations:
    app.kubernetes.io/description: "Jellyfin media server service"
spec:
  type: ClusterIP
  ports:
  - port: 8096
    targetPort: 8096
    protocol: TCP
    name: http
  - port: 8920
    targetPort: 8920
    protocol: TCP
    name: https
  selector:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin 